## This manifest initializes a new BOSH Director on Google Cloud Platform with co-located PostgreSQL database, UAA and CredHub.
##
## Deployment-specific configuration should be done in file 'gcp-director-config.yml'. This manifest may be modified, but modification is not required.
##
## To deploy (requires BOSH v2 CLI) - `bosh create-env gcp-director.yml --vars-file gcp-director-config.yml --vars-store gcp-director-credentials.yml`
---
name: gcp-director-credhub

releases:
- name: bosh
  url: https://s3.amazonaws.com/ch-compiled-releases/bosh-264.1-ubuntu-trusty-3468.5-20171109-001949-93327961.tgz
  version: "264.1.0"
  sha1: 9561c88fb884bf980c5a395ecfb56589b40aec31
- name: uaa
  url: https://s3.amazonaws.com/ch-compiled-releases/uaa-52.2-ubuntu-trusty-3468.5-20171107-010509-955327287.tgz
  version: "52.2"
  sha1: a777291f270aa0ed624e90bd50cb014fd997fe17
- name: credhub
  url: https://s3.amazonaws.com/ch-compiled-releases/credhub-1.6.4-ubuntu-trusty-3468.5-20171107-010147-537523233.tgz
  version: "1.6.4"
  sha1: ef801f338d3a0bad227e6bd743e6d8efca6dfc86
- name: bosh-google-cpi
  url: https://bosh.io/d/github.com/cloudfoundry-incubator/bosh-google-cpi-release?v=25.10.0
  version: "25.10.0"
  sha1: 3a551822bff0fd040d73fd385ab34fbc17b476f5

resource_pools:
- name: vms
  network: private
  stemcell:
    url: https://bosh.io/d/stemcells/bosh-google-kvm-ubuntu-trusty-go_agent?v=3468.5
    sha1: 53cc03a3ab829f8538b527f3c7c02b2340897aa4
  cloud_properties:
    zone: ((gcp-zone))
    machine_type: n1-standard-4
    root_disk_size_gb: 25
    root_disk_type: pd-ssd

disk_pools:
- name: disks
  disk_size: 100000
  cloud_properties:
    type: pd-ssd

networks:
- name: public
  type: vip
- name: private
  type: manual
  subnets:
  - range: 10.0.0.0/24
    gateway: 10.0.0.1
    cloud_properties:
      network_name: ((gcp-network-name))
      subnetwork_name: ((gcp-subnet-name))
      ephemeral_external_ip: false

external-ip: &external-ip ((external-ip))
internal-ip: &internal-ip ((internal-ip))

variables:
- name: credhub-mtls-ca
  type: certificate
  options:
    common_name: 'CredHub mTLS CA'
    is_ca: true
- name: bosh-ca
  type: certificate
  options:
    common_name: 'BOSH Director CA'
    is_ca: true
- name: credhub-tls
  type: certificate
  options:
    ca: bosh-ca
    common_name: *external-ip
    alternative_names:
    - *external-ip
    - *internal-ip
- name: director-tls
  type: certificate
  options:
    ca: bosh-ca
    common_name: *external-ip
    alternative_names:
    - *external-ip
- name: uaa-tls
  type: certificate
  options:
    ca: bosh-ca
    common_name: *external-ip
    alternative_names:
    - *external-ip
- name: uaa-jwt
  type: rsa 
- name: uaa-users-admin
  type: password
- name: uaa-users-hm
  type: password
- name: uaa-clients-director-to-credhub
  type: password
- name: uaa-admin
  type: password
- name: uaa-login
  type: password
- name: nats
  type: password
- name: blobstore-agent
  type: password
- name: registry-admin
  type: password
- name: blobstore-director
  type: password
- name: mbus
  type: password
- name: database-admin
  type: password
- name: credhub-encryption-password
  type: password

instance_groups:
- name: credhub
  instances: 1
  resource_pool: vms
  persistent_disk_pool: disks
  networks:
    - name: private
      static_ips: 
      - ((internal-ip))
      default:
      - dns
      - gateway
    - name: public
      static_ips: 
      - ((external-ip))

  jobs:
  - name: credhub
    release: credhub
    properties:
      credhub:
        port: 8844
        authentication:
          uaa:
            url: *uaa-url
            verification_key: ((uaa-jwt.public_key))
            ca_certs:
            - ((uaa-tls.ca))
          mutual_tls:
            trusted_cas:
            - ((credhub-mtls-ca.certificate))
        data_storage:
          type: postgres
          host: 127.0.0.1
          port: 5432
          username: admin
          password: ((database-admin))
          database: credhub
          require_tls: false
        tls: ((credhub-tls))
        log_level: info
        encryption:
          keys:
          - provider_name: int
            encryption_password: ((credhub-encryption-password))
            active: true
          providers:
          - name: int
            type: internal

  - name: postgres-9.4
    release: bosh
    properties:
      postgres: &db
        listen_address: 127.0.0.1
        host: 127.0.0.1
        port: 5432
        user: admin
        password: ((database-admin))
        database: bosh
        additional_databases: 
        - uaa
        - credhub
        adapter: postgres

  - name: uaa
    release: uaa
    properties:
      uaa:
        url: &uaa-url "https://((external-ip)):8443"
        scim:
          users:
          - name: admin
            password: ((uaa-users-admin))
            groups:
            - scim.write
            - scim.read
            - bosh.admin
            - credhub.read
            - credhub.write
          - name: hm
            password: ((uaa-users-hm))
            groups:
            - bosh.admin
        clients:
          bosh_cli:
            override: true
            authorized-grant-types: password,refresh_token
            scope: openid,bosh.admin,bosh.read,bosh.teams.*.admin
            authorities: uaa.none
            access-token-validity: 120
            refresh-token-validity: 43200
            secret: ""
          credhub_cli:
            override: true
            authorized-grant-types: password,refresh_token
            scope: credhub.read,credhub.write
            authorities: uaa.resource
            access-token-validity: 30
            refresh-token-validity: 3600
            secret: ""
          director_to_credhub:
            override: true
            authorized-grant-types: client_credentials
            scope: uaa.none
            authorities: credhub.read,credhub.write
            access-token-validity: 43200
            secret: ((uaa-clients-director-to-credhub))
        admin: {client_secret: ((uaa-admin))}
        login: {client_secret: ((uaa-login))}
        zones: {internal: {hostnames: []}}
        sslCertificate: ((uaa-tls.certificate))
        sslPrivateKey: ((uaa-tls.private_key))
        jwt:
          revocable: true
          policy:
            active_key_id: key-1
            keys:
              key-1:
                signingKey: ((uaa-jwt.private_key))

      uaadb:
        address: 127.0.0.1
        port: 5432
        db_scheme: postgresql
        databases:
        - tag: uaa
          name: uaa
        roles:
        - tag: admin
          name: admin
          password: ((database-admin))

      login:
        saml:
          serviceProviderCertificate: ((uaa-tls.certificate))
          serviceProviderKey: ((uaa-tls.private_key))
          serviceProviderKeyPassword: ""

  - name: director
    release: bosh
    properties:
      director: &director
        address: ((external-ip))
        name: gcp-director-credhub
        config_server:
          enabled: true
          url: https://((external-ip)):8844/api/
          ca_cert: ((credhub-tls.ca))
          uaa:
            url: *uaa-url
            client_id: director_to_credhub
            client_secret: ((uaa-clients-director-to-credhub))
            ca_cert: ((uaa-tls.ca))
        db: *db
        cpi_job: google_cpi
        max_threads: 10
        enable_snapshots: false
        user_management:
          provider: uaa
          uaa:
            url: *uaa-url
            public_key: ((uaa-jwt.public_key))
        ssl:
          cert: ((director-tls.certificate))
          key: ((director-tls.private_key))
        trusted_certs: ((bosh-ca.certificate))
      agent: &agent
        mbus: nats://nats:((nats))@((internal-ip)):4222
        ntp: *ntp
        blobstore:
           options:
             endpoint: http://((internal-ip)):25250
             user: agent
             password: ((blobstore-agent))
      ntp: *ntp
      nats: *nats
      blobstore: *blobstore

  - name: registry
    release: bosh
    properties:
      registry: &registry
        address: ((internal-ip))
        host: ((internal-ip))
        db: *db
        http: {user: admin, password: ((registry-admin)), port: 25777}
        username: admin
        password: ((registry-admin))
        port: 25777
        use_gce_metadata: false

  - name: nats
    release: bosh
    properties:
      nats: &nats
        address: 127.0.0.1
        user: nats
        password: ((nats))

  - name: blobstore
    release: bosh
    properties:
      blobstore: &blobstore
        address: ((internal-ip))
        port: 25250
        provider: dav
        director:
          user: director
          password: ((blobstore-director))
        agent:
          user: agent
          password: ((blobstore-agent))

  - name: health_monitor
    release: bosh
    properties:
      hm:
        director_account:
          user: hm
          password: ((uaa-users-hm))
          ca_cert: ((uaa-tls.ca))
        resurrector_enabled: true
      director: *director
      nats: *nats

  - name: google_cpi
    release: bosh-google-cpi
    properties:
      google: &google_properties
        project: ((gcp-project-id))
        json_key: ((gcp-escaped-json-key))
      ntp: &ntp
      - 0.pool.ntp.org
      - 1.pool.ntp.org
      registry: *registry
      blobstore: *blobstore
      agent: *agent

cloud_provider:
  template:
    name: google_cpi
    release: bosh-google-cpi

  mbus: https://mbus:((mbus))@((external-ip)):6868

  properties:
    google: *google_properties
    agent: {mbus: "https://mbus:((mbus))@0.0.0.0:6868"}
    blobstore: {provider: local, path: /var/vcap/micro_bosh/data/cache}
    ntp: *ntp

